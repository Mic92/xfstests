#! /usr/bin/env bash
# SPDX-License-Identifier: GPL-2.0
# Copyright (c) 2006 Silicon Graphics, Inc.  All Rights Reserved.
#
# FSQA Test No. 155
#
# DMAPI event DM_EVENT_RENAME generation
#
seq=`basename $0`
seqres=$RESULT_DIR/$seq
echo "QA output created by $seq"

here=`pwd`
tmp=/tmp/$$
status=1    # failure is the default!
trap "exit \$status" 0 1 2 3 15

# get standard environment, filters and checks
. ./common/rc
. ./common/filter
. ./common/dmapi

# real QA test starts here
_supported_fs xfs

_require_scratch
_scratch_mkfs_xfs >/dev/null 2>&1
_dmapi_scratch_mount

DMAPI_FS_HANDLE="`${DMAPI_QASUITE1_DIR}cmd/path_to_fshandle $SCRATCH_MNT`"

rm -f $SCRATCH_MNT/dmapi_test_file1

echo "*** create DMAPI session"
eval `${DMAPI_QASUITE1_DIR}../simple/dm_create_session`
sid1=$newsid

${DMAPI_QASUITE1_DIR}cmd/set_eventlist $DMAPI_FS_HANDLE DM_EVENT_RENAME
echo "set_eventlist Returned: $?"

echo "*** setting DMAPI DM_EVENT_RENAME disposition."
${DMAPI_QASUITE1_DIR}cmd/set_disp -s $sid1 $DMAPI_FS_HANDLE DM_EVENT_RENAME

echo "***creating file on dmapi filesystem"
touch $SCRATCH_MNT/dmapi_test_file

echo "***renameing file on dmapi filesystem"
mv $SCRATCH_MNT/dmapi_test_file $SCRATCH_MNT/dmapi_test_file1 &
MV_PID=$!

sleep 1

echo "***checking for dmapi event"
eval `${DMAPI_QASUITE1_DIR}cmd/get_events $sid1 \
     | $PERL_PROG -ne 's/new parent/new_parent/g;
                 s/old parent/old_parent/g;
                 s/new name/new_name/g;
                 s/old name/old_name/g;
                 s/\s+/\n/g;
                 print;'`

${DMAPI_QASUITE1_DIR}cmd/respond_event $sid1 $token 1 0

${DMAPI_QASUITE1_DIR}../simple/dm_destroy_session -s $sid1

status=0
exit 
